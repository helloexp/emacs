'use strict';

const io = require('socket.io-client');


class Ws {
    constructor(token) {
        this.socketURL = 'http://0.0.0.0:5000/sns';
        this.socket = this.connect(token);
        this.join()
    }

    connect(token) {
        return new Promise( (resolve, reject) => {
            const socket = io.connect(this.socketURL);
            socket.io.reconnection(false);

            socket.on('connect', function() {
                socket.emit('authenticate', {access_token: token});
                resolve(socket);
            });
        });
    }

    disconnect() {
        return new Promise( (resolve, reject) => {
            this.socket.emit('message', { value: 'disconnect' });
            this.socket.disconnect();
            resolve(socket);
        });
    }

    join(socket) {
        return new Promise( (resolve, reject) => {
            socket.on('authenticated', () => {
                socket.emit('joinGroup', {type: 'feed', group_id: '__all__'});
                resolve();
            });
        });
    }

    wait_message() {
        return new Promise( (resolve, reject) => {
            this.socket.on('allin_sns_demo', (res) => {
                resolve(res);
            });
        });
    }
}



module.exports = {
    connect() {
        return new Ws();
    }
};
