-*- mode: org -*-

* todos
** Todo [#G] Plant : 水, 肥料
SCHEDULED: <2016-10-30 Sun +10d>
- State "Done"       from "Todo"       [2016-10-20 Thu 07:33]
- State "Done"       from "Todo"       [2016-10-11 Tue 13:44]
- State "Done"       from "Todo"       [2016-10-04 Tue 09:02]
CLOCK: [2016-09-16 Fri 10:03]--[2016-09-16 Fri 10:03] =>  0:00
CLOCK: [2016-09-02 Fri 11:21]--[2016-09-02 Fri 11:22] =>  0:01
:PROPERTIES:
:LOGGING: DONE(!) logrepeat
:STYLE: habit
:LAST_REPEAT: [2016-10-20 Thu 07:33]
:END:

http://sodatekata.net/flowers/page/633.html

*** バンブー
[2016-10-05 Wed] 肥料

*** パキラ
[2016-10-11 Tue] water
[2016-10-05 Wed] water / fertilizer
** Todo [#G] AWS
SCHEDULED: <2016-10-21 Fri +1d>
- State "Done"       from "Todo"       [2016-10-20 Thu 07:33]
- State "Done"       from "Todo"       [2016-10-19 Wed 07:53]
CLOCK: [2016-09-16 Fri 10:03]--[2016-09-16 Fri 10:03] =>  0:00
CLOCK: [2016-09-02 Fri 11:21]--[2016-09-02 Fri 11:22] =>  0:01
:PROPERTIES:
:LOGGING: DONE(!) logrepeat
:STYLE: habit
:LAST_REPEAT: [2016-10-20 Thu 07:33]
:END:

- AWSの無駄なresource確認
    - 随時追加
    - 会話で出たものも考えて追加
        - 一過性?
        -利用サービスは?

- 請求書参照
- EC2 instance
    - EIP
    - ELB

- RDS



** Todo [#G] check
SCHEDULED: <2016-10-21 Fri +1d>
- State "Done"       from "Todo"       [2016-10-20 Thu 07:34]
- State "Done"       from "Todo"       [2016-10-19 Wed 07:53]
- State "Done"       from "Todo"       [2016-10-18 Tue 08:18]
- State "Done"       from "Todo"       [2016-10-17 Mon 18:16]
- State "Done"       from "Todo"       [2016-10-14 Fri 10:11]
- State "Done"       from "Todo"       [2016-10-13 Thu 07:05]
- State "Done"       from "Todo"       [2016-10-12 Wed 19:51]
- State "Done"       from "Todo"       [2016-10-11 Tue 17:44]
- State "Done"       from "Todo"       [2016-10-11 Tue 13:49]
- State "Done"       from "Todo"       [2016-10-07 Fri 08:15]
- State "Done"       from "Todo"       [2016-10-06 Thu 08:23]
- State "Done"       from "Todo"       [2016-10-05 Wed 11:02]
- State "Done"       from "Todo"       [2016-10-04 Tue 09:02]
- State "Done"       from "Todo"       [2016-10-04 Tue 08:56]
- State "Done"       from "Todo"       [2016-10-03 Mon 11:58]
- State "Done"       from "Todo"       [2016-09-29 Thu 09:21]
CLOCK: [2016-09-16 Fri 10:03]--[2016-09-16 Fri 10:03] =>  0:00
CLOCK: [2016-09-02 Fri 11:21]--[2016-09-02 Fri 11:22] =>  0:01
:PROPERTIES:
:LOGGING: DONE(!) logrepeat
:STYLE: habit
:LAST_REPEAT: [2016-10-20 Thu 07:34]
:END:

*** Chronograph
*** 時間記録忘れずに
http://d.hatena.ne.jp/tamura70/20100221/org

- start : c-cxi
- stop  : c-cxo
- list  : v l (in c-aa window)

*** Server状態確認
uniqlo server

- unicorn
- nginx
- df
- tw

*** ruby-webpage
https://support.google.com/webmasters/answer/6033088

**** search console
- crawl error
- クエリ登録状態
 - サイトマップ
   インデックスに登録済みの項を参照
   [2015-09-18 Fri] 現在、保留

**** analytics
とりあえず、観点がわからない
アクセス状況みよう

**** log
- server上のログ確認
- kibana
http://54.65.87.72:5601/#/discover?_g=%28refreshInterval:%28display:Off,pause:!f,section:0,value:0%29,time:%28from:now%2Fd,mode:quick,to:now%2Fd%29%29&_a=%28columns:!%28_source%29,index:%27logstash-*%27,interval:auto,query:%28query_string:%28analyze_wildcard:!t,query:%27*%27%29%29,sort:!%28%27@timestamp%27,desc%29%29
** Todo [#G] todo見直し
SCHEDULED: <2016-10-22 Sat +2d>
- State "Done"       from "Todo"       [2016-10-20 Thu 07:34]
- State "Done"       from "Todo"       [2016-10-18 Tue 08:18]
- State "Done"       from "Todo"       [2016-10-17 Mon 07:15]
- State "Done"       from "Todo"       [2016-10-14 Fri 10:12]
- State "Done"       from "Todo"       [2016-10-11 Tue 17:44]
- State "Done"       from "Todo"       [2016-10-07 Fri 18:08]
- State "Done"       from "Todo"       [2016-10-05 Wed 11:00]
- State "Done"       from "Todo"       [2016-10-04 Tue 09:15]
- State "Done"       from "Todo"       [2016-09-29 Thu 09:21]
- State "Done"       from "Todo"       [2016-09-27 Tue 11:03]
- State "Done"       from "Todo"       [2016-09-21 Wed 19:04]
- State "Done"       from "Todo"       [2016-09-20 Tue 10:01]
- State "Done"       from "Todo"       [2016-09-15 Thu 10:01]
- State "Done"       from "Todo"       [2016-09-13 Tue 08:56]
- State "Done"       from "Todo"       [2016-09-08 Thu 10:01]
- State "Done"       from "Todo"       [2016-09-06 Tue 19:16]
- State "Done"       from "Todo"       [2016-09-05 Mon 10:58]
- State "Done"       from "Todo"       [2016-09-05 Mon 10:33]
- State "Done"       from "Todo"       [2016-09-02 Fri 11:23]
- State "Done"       from "Todo"       [2016-08-31 Wed 09:33]
- State "Done"       from "Todo"       [2016-08-29 Mon 16:51]
- State "Done"       from "Todo"       [2016-08-26 Fri 21:54]
- State "Done"       from "Todo"       [2016-08-25 Thu 10:06]
- State "Done"       from "Todo"       [2016-08-19 Fri 18:21]
- State "Done"       from "Todo"       [2016-08-19 Fri 18:21]
- State "Done"       from "Todo"       [2016-08-17 Wed 09:42]
- State "Done"       from "Todo"       [2016-08-15 Mon 09:46]
- State "Done"       from "Todo"       [2016-08-09 Tue 10:49]
- State "Done"       from "Todo"       [2016-08-09 Tue 10:39]
- State "Done"       from "Todo"       [2016-08-05 Fri 21:29]
:PROPERTIES:
:LOGGING: DONE(!) logrepeat
:STYLE: habit
:LAST_REPEAT: [2016-10-20 Thu 07:34]
:END:

** Todo [#G] reminder
SCHEDULED: <2016-10-21 Fri +1d>
- State "Done"       from "Todo"       [2016-10-20 Thu 07:32]
- State "Done"       from "Todo"       [2016-10-19 Wed 07:51]
- State "Done"       from "Todo"       [2016-10-18 Tue 08:18]
- State "Done"       from "Todo"       [2016-10-17 Mon 07:15]
- State "Done"       from "Todo"       [2016-10-14 Fri 10:10]
- State "Done"       from "Todo"       [2016-10-13 Thu 07:02]
- State "Done"       from "Todo"       [2016-10-12 Wed 19:51]
- State "Done"       from "Todo"       [2016-10-11 Tue 13:47]
- State "Done"       from "Todo"       [2016-10-07 Fri 08:11]
- State "Done"       from "Todo"       [2016-10-06 Thu 08:22]
- State "Done"       from "Todo"       [2016-10-05 Wed 11:00]
- State "Done"       from "Todo"       [2016-10-04 Tue 08:55]
- State "Done"       from "Todo"       [2016-10-03 Mon 11:41]
- State "Done"       from "Todo"       [2016-09-29 Thu 09:22]
- State "Done"       from "Todo"       [2016-09-28 Wed 17:00]
- State "Done"       from "Todo"       [2016-09-27 Tue 10:56]
:PROPERTIES:
:LOGGING: DONE(!) logrepeat
:STYLE: habit
:LAST_REPEAT: [2016-10-20 Thu 07:32]
:END:

白い空間
Flowing Through

心の内外に錆び付いてる

我観客なり (?)

自分の感情を認めよう
心の中ですら, 感情を塞ぐのは僕としては間違っている気がする
抑えられない程の感情なら, 対策を考えよう

日々の細かな感情の方向性が
自分を規定していく

感情のコントロール

自分を変えるには意志の力しかない
まずは, 意識を向ける所を, 集中力を
雑念うずまく自分をどうしたものか

自分ができないことを, 他人のせいにしている
ちょっとずつ効率化し, 進んで行こう

こわがらずに学べばいい

気にしたってしょうがない

自らの意思で落ち着くしかない

壊れたってかまわない

ゆっくりで
あせりを表に出さない

*** 整備は大切だ
https://www.youtube.com/watch?v=1MPn_SDAutE

- 飛行機事故
- 整備不良

お前のしているprogramも同じだ.
面倒に思っていては, 事故が発生する.
考えろ

*** まずは
落ち着けそれからだ
クロックを落とそう
体の力を抜け

副交感神経を優位に

*** server作業時
- 時間記録
- ログ取得

*** business bank
30min単位で記述すること

*** mind
他者に嫌われてもいい

他者を中に入れない
我観客なり

他人にどう思われてもいいだろ?
自分考えて, 失敗して, 覚えよう

好かれなくていい
防御でいい

がんばらなくていい
体の力を抜く、落ち着くのが最優先
まずは落ち着けそれからだ

自分の中の固定観念を崩せ

どうでもいいんだよ
何もかも
そして、どうでもよくない

小針さんを見習おう
ゆっくり話そう

*** thinking
腰を据えて
落ち着いて

いらないことは頭から追い出そう

迷いをなくす事だ
迷ってばかりだ
信じる事だ
やると決めたら、やる


適当に生きよう
俺はバカなんだから
ぶつかって、考えて、覚えよう
失敗してなんぼ
自分を信じろ、そして砕けろ

罪悪感を過剰に感じるのはやめよう


外界に対する意識レベルを下げよう
筋肉を弛緩するイメージを常に


だから、どうした?
お前の存在などちっぽけでお前の影響など無に等しい
お前は、測れない事を大きく考えすぎているのではないか



上手くやろうとするな
無心でいけ
ただ、自分の上手くやろうとする、その気持ちは封じるな

無心でいくのも、上手くやりたいからだろ?
今の自分の実力の8割でも出せればよし。

でもまぁ、経験してこそだよな
あとは自分で方向性を決めること、
経験すること
心にある程度従うこと

欲を認めろ

*** for noob programmer
**** KISS
# Keep It Simple,Stupid
#シンプルにしておけ、愚か者よ

コードを書くとき、「単純性」や「簡潔性」を最重要項目ということ。
コードは、自然に任せて修正していくと、無秩序になり、複雑になる。
その結果、読みにくく、修正しにくくなっていく。コードをシンプルに保つことで、修正に容易にすることができる。

具体的には、プログラミングをする際に、「動作させるために、もっともシンプルなものは何か」と常に問いかけることが必要である。
**** DRY
# Don't Repeat Yourself.
# 繰り返すな。

同じコードを重複して書くなということ。
なぜかというと、コードの改善が難しくなるからである。
まず、同じコードが複数あると、量的に「より多く」、質的に「より複雑」になるため、コードを読む作業が難しくなる。
また、修正するときにも、一つ直すときにも、重複して書いたコードに対しても漏れなく直さなければならないので大変である。

具体的には、処理のまとまりには「関数化」「モジュール化」をし、データは名前をつけて定数を定義することで重要である。

**** YAGNI
# You Aren't Going to Need it.
# それはきっと必要にならない

コードが必要最低限にしろということ。

あらかじめ、いろいろな事態に備えてコードを盛り込んでおいても、結局は利用されないことが多い。
そして、それによってコードに「余計な」複雑性を盛り込んでしまうことになり、KISSに思想にも反することになる。
つまり、予想が外れた場合、時間が無駄になるどころか、邪魔にもなってしまうのである。そして、単純なコードの方が、汎用性が高いことさえある。

具体的には、汎用性よりも、単純性を考えることが重要。コードは「今」必要なものだけにすること。

**** PIE
# Program Intently and Expressively
# 意図を表現してプログラミングせよ

コードは意図を明確に表現するように書くということ。
コードが「人」が読むためのものであり、コードだけがソフトウェアの動作を「正確に」「完全に」知るための手がかりである。

よって、ソフトウェアの動作を把握するには、わかりやすいコードを書いて、コードで意図を伝えるしかない。
具体的には、コードを書くときには、「書きやすさ」より「読みやすさ」を重視すること。
コードは「書かれること」よりも「読まれること」の方がずっと多いものであるからである。
**** SLAP
# Single Level of Abstraction Principle
# 抽象化レベルの統一

コードを書くとき、高いレベルの抽象化概念と低いレベルの抽象化概念を分離するようにすること。

なぜなら、コードがレベルに揃った関数に分割されることで、「要約性」「閲覧性」を同時に満たすことができる。
同じところには、同じ抽象度の処理といったように、コードが統一されることで、コードはよどみなく流れ、理解しやすくなる。

具体的には、関数を構造化することが重要である。
一つの関数で、ある部分ではデータベース接続という低水準の処理を行い、他の部分ではビジネスロジックの実行という高水準な
処理行うという書き方はしないことが重要である。
*** most
感情をコントロール

問題は、自分がどうしたいか、どう感じるか
世界中の誰もが僕をいらないと言っても、僕は僕のために僕が必要なのだ

集中力

知るを知るとなし、知らざるを知らざるとなす
すなわち、これ知るなり

生死の去来するは
棚頭の傀儡たり
一線断ゆる時
落々磊々

我思うと我思う、故に我思うと我思う

自分をプログラムしよう

まだまだだが、しょーがない
ふぅ

焦ってはいけない
恥ずかしさを他人の前で出してはいけない
という間違った認識
焦るものだよ。
コントロールはしたいけど、100%はあれだよ
しゃーない

言葉を発するまえに５秒考えろ

うん、相手が必要だな

*** 反逆する
強くなるためには 『弱い考え方』 をすることだな。

「弱い考え方？」

そうだ――
たとえば　お前のダチが不良に襲われてるところを見たとする
一番弱い考えは何だ？

「ダチを見捨てて逃げることだ」

そうだ――
その弱い考え方に反逆するんだよ

今のお前の一番『弱い考え』は、なんだ？答えろ、カズマ！！

黒田 洋介　「スクライド」
―――――――――――――――――――――――

「痛くねぇのかよぉ！？」

「その痛みに反逆する！」

黒田 洋介　「スクライド」
―――――――――――――――――――――――

実用例：気力がないときには、結構、使えます。
コツは、周りが驚くぐらい大きく叫ぶこと！

「あー、めんどうくさい。こんなのやりたくないなあ。
　疲れたし、ちょっと休憩してこようかな・・・・・・・・
　・・・・という弱い考えに反逆する！！」

「眠い・・・。なんかだるいし、、、あと、五分だけ、
　もうちょっとだけ眠ろう・・・・・・・・・
　・・・・その眠けに反逆する！！（がばぁ）」

―――――――――――――――――――――――

哲学するためには 『当たり前の考え方』 をすることだな……。

今のお前の一番 『当たり前の考え』 は何だ？

そうだ――
その『当たり前の考え方』に反逆するんだよ

飲茶　「ストライプ」
―――――――――――――――――――――――

「原理的に不可能じゃねぇのかよぉ！？」

「その原理に反逆する！」

飲茶　「スプライト」
*** ジャイロ.ツェペリ
「俺は『納得』したいだけだッ！
『納得』はすべてに優先するッ！」

*** 勉強
**** 段取り
段取り半分

- 作業アイテム
- 作業内容
- 状況や課題
をメモで共有してきますね。

**** 周りをみて学ぼう
柴田さん、稲葉さん
勉強できる人は色々いる
見て学ぼう

**** まずは自分のこと
今日やることは?
考えることは?

*** brew upgrade
cron動いてる?

*** 人にみられると
不安になるか、テンション上がるかどっちかだな
まだまだってことだ

でも、少し落ち着いてきたな
安定してきたか?

なんのおかげだろうか?
やっぱり…うーん、少し長期的にみるか

*** わからなくたっていいんだよ
どうしようという不安だな
どーもならねーよ =P
わからないなら、わからないでいいんだよ

*** 誰もお前には期待していないよ
別にみたっていいし

*** 視線
それを負い目に感じる必要も無い

*** 多くのことを考えない
やることが頭の中にいっぱいあると、焦りが生まれる
外に吐き出して、優先度を決めて、処理していおく。

*** 焦りだな
自分を認識する余裕はできたかな?
時間に追われてるとダメだな

*** 意識しない
意識を違うところに向ける
気にしたところで、現実は変わらない (まぁ影響はするから、変わっちゃうとも言えるか)
むしろ、気にしている姿が評価となる

むしろ、何してても周りに影響を与えているよ

*** スイッチがわかってきたな
弱い自分が前面に出ていると
思考が流れない

メインの自分は
思考が飛ぶ。周りがみえない

頑固な自分は
集中するが、より周りが見えない

*** 笑いの人の言葉
盲目の客に対して立川談志が言った言葉
あんた目が見えねぇのか？安心しな、
目が見えてたって何も見えちゃいねえ奴は沢山いる


犬の心･押見
笑え。お客さんの前では笑え。
自分で決めたんだったら、しっかりしろ。

さんま
「バラエティに感動の涙は要らんねん。芸人は笑わせて涙流させな。」
「俺は幸せな人を感動させたいんやなくて、泣いてる人を笑わせて
　幸せにしたいんや。これが俺の笑いの哲学や。」


たけし
「人は何かひとつくらい誇れるものを持っている
何でもいい、それを見つけなさい
勉強が駄目だったら運動がある両方駄目だったら君には優しさがある
夢をもて目的をもて、やれば出来る
こんな言葉に騙されるな
何もなくていいんだ人は生まれて生きて死ぬ
これだけでたいしたもんだ！騙されるな」


*** musician
"自分を直視することより他人を批判することのほうが簡単だ 。"

我が身を修正しろ

*** 姿勢を正しく
*** envy, pride
結局は自分はできないやつだろ
勉強もしない
遊んでばかりだ
認めろ

嫌なら変えるしかない

**** 他人を認めることだ
自分は自分
他人は他人

**** 「嫉妬自体をしなければ、ネガティブな気分は起きない」という考え方で、嫉妬の原因を考えてみます。
他人と比較している
自分に集中していない
自分に自信がない（不満）
現実を受け入れていない
恐れている
都合の悪い妄想を、自分の都合のいいように膨らませている

あげたらきりがありませんが、嫉妬に狂っている時って、こういう原因なんかに気づくわけないですよね？

つまり、嫉妬を止める方法があるとしたら、これと逆のことをするだけです。
他人と比較するのを止める
自分に集中して努力をする
自信をもつ
理想とのギャップを受け入れる
被害妄想を止める

*** innocense
- 柿も青いうちは鴉もつっつき申さず候。
- 自分の面が曲がっているに鏡を責めてなんになる。
- 鏡は悟りの具ならず迷いの具なり。
- 春の日やあの世この世と馬車を駆り。（中村苑子）
- シーザーを理解するためにシーザーである必要はない。（Ｍ- ウェーバー ）
- 人はおおむね自分で思うほどには幸福でも不幸でもない。肝心なのは望んだり生きたりすることに飽きないことだ。
- 孤独に歩め。悪をなさず、求めるところは少なく。林の中の象のように。（仏陀）
- その思念の数はいかに多きかな。我これを数えんとすれどもその数は砂よりも多し。（旧約聖書詩篇）
- 彼ら秋の葉のごとく群がり落ち、狂乱した混沌は吼えたけり。（ミルトン 失楽園）
- 忘れねばこそ思い出さず候。
- 信義に二種あり。秘密を守ると正直を守るとなり。両立すべきことにあらず。
- 秘密なきは真なし。
- 生死の去来するは棚頭の傀儡たり一線断ゆる時落落磊磊。
- 人の上に立つをえず。人の下につくをえず。路辺に倒るるに適す。
- ロバが旅にでたところで馬になって帰ってくるわけじゃねえ。
- 寝（い）ぬるにしせず。（孔子）
- 未だ生を知らずいずくんぞ死を知らんや。（孔子）
- 暴苦は覚悟でなく、愚鈍となりてこれに耐える。
- 人体は自らゼンマイを巻く機械であり、永久運動の生きた見本である。
- 神は永遠に幾何学する。（プラトン）
- 幸運が三度姿を現すように、不運もまた三度兆候を示す。
- 見たくないから見ない、気がついても言わない、言っても聞かない、そして破局を迎える。
- 人造人間のゴーレムは額に書かれたaemaethつまり真理の文字によってエネルギーを得ていたが、最初の文字aeを消されmaethすなわち死を示されて土へかえった。（ヤコブグリム）
- 思い出をその記憶と分かつものは何もない。そしてそれがどちらであれ、それが理解されるのは常に後になってからのことでしかない。
- 鼓を鳴らし攻めて可なり。（孔子）
- 鳥は高く天上に蔵れ、魚は深く水中に潜む。（斎藤緑雨）
- 精霊はあらわれたまえり。
- 何人か鏡をとりて魔ならざる者ある。魔を照らすにあらず作るなり。すなわち鏡は瞥見すべきものなり。熟視すべきものにあらず。（斎藤緑雨）
- 鳥の血に悲しめど魚の血に悲しまず。声あるものは幸いなり。（斎藤緑雨）
*** a
- 姿勢
  意識を別のとこに向けるしかないな
  ちょっとずつ、考えて修正していこう

- やっぱ
  個人に対する執着と怒りが残ってるなぁ
  結局、僕にとっては自分が一番悪いしな
  なかなか消えないもんだな

- 楽しいことを考えよう

- 超然としよう

- 世界を試す

- 顔にでるなぁ

- 気にしない
  心に引っ掛けない

- 全てを許そう
  自分を
  意識レベルを落とそう
  自分の気持ちい事をしよう
  自分を試して、自分が欲しいものを探そう
  恥かいていいよ

- 意識をやりたく無いから
  しょうがねぇなやるへ

- 感情を開放していいよ
  場所を考えてな！

- 感情を確かめて
  体を縛る動作を緩める

- 僕の中のいろんな部分
  大丈夫だよ強くないよ

- ただし、感情が入ると思考が迷走する
  俺の問題点は、他人によく思われたい
  どうしようという不安だ
  消せはしないが
  気をつけて、意識を別の方向に向ける事はできるだろう
  (この思考について、考えて根本から修正する必要がある)

- 集中力

- 分割統治

- 他人は他人、俺は俺
  他人に頼りすぎるな、自分は自分だ。
  みんなで考える。

- 世界は、自分は、そういうもんだと受け入れる
  いらいらいする自分も受け入れよう

- 自分を分析しろ

- すぐには変われない
  自分の中を見ていればわかるだろ?
  でも、方向性を変えていこうぜ. なｗ

- 嫌だという気持ちが思考のstopperになっている
  限界を決めている

- スクリーン / 劇場
  意識の中心の力を抜け
  意識を自分の体にむけろ
  視覚を閉じろ

- 時間に追われるな
  俺は特に時間に追われると、まともな仕事はできない

- single / multi
  使いわけろ
  集中する時は、single (裏側で2つかな走らせられるのは)
  幅を持って考える時は、multiに (連想、問いの形を変える)

- お前は能力が低い
  認めろ。焦ってもしょうがない
  (天才とあって見たいなぁ)

- 天才って
  バックグランドでの処理で一気に手を進めて
  意識に上がるまえに、いろいろ考えてるんだろうな

- 自分の気持ちいい事をしよう
  他人の事ばかり気にしてもしょうがない
  自分が心地よい環境を自分で生成しよう

- 男らしく
  隠すな、気持ちをごまかすな
  素直にいこう
  思考の基本が隠す事に向いてるぞ

- ごまかす
  そうだ、僕はごまかしてる
  これが、処理を止めている
  僕自身が僕の障害になっている

- 自分の面が曲がっているのに、鏡をせめて何になる
  鏡の中から解放しよう。(どういう意味だ)

- 他人をきにするな
  やはり、僕の中では他人を、非常に意識している回路がある
  これを上手く調整していかなければならない

  別に俺は必要とされていないだろう
  過度にきにする必要はない
  必要なことをやれ

- ありがたいという気持ちを

- 何も特別視しない
  特別かもしれないし、何の価値もないかもしれない
  わからないのに、特別にみるのか。

- みんな間違ってばっかだ
  自身もって行こう
  rockでmetalに行こうぜ

- 見なくていい
  聞かなくていい
  それでいいとしよう (伝わらなくいいという謙虚さと同一か?)

- その場にいなくてもいい
  知らなくていい事もあるだろ
  知ってはいけないこと (その二人だけの秘密とかさ)

- 朝会
  09:10から
  なるべく短く
  プロジェクト状況はみんなに伝えたい事があれば

*** test coding
- テストは通るか

- 実行時間は適切か
  5sec目安?

- 固定値はあるか? マスターデータに依存していないか?

- 実行順序による依存が存在しないか

- コメント
  テストの観点を残す

*** sticky bit
/tmpには、sticy bitお忘れなく
書き込めなくなる (詳細調査していない)

*** 問題
最善は無い。あるのは恐らく次善だけだ

焦らない
(時には問題を吟味しすぎて、解答を出さないのが問題の時もある)

問題を抱えているのはだれか?
本質的な問題はなんですか?
問いの形を変えれば、答えが変わりますか?

*** 紙の処理の指針に関して
ISMS絡みで色々策定中なので、現時点では、
[ なるべく紙に残さない＋用済み後すみやかに破棄（シュレッダー）でお願いします。]

また、顧客から紙ベースで機密・秘密に関する書類を受けた場合は、
受けた時点で管理を始め、破棄した段階で何をどのように破棄したかまでの記録が必要です。

このフォーマットについては、
客先フォーマットでやる場合と
自社フォーマットでやる場合もありますが、
簡単なものはISMS策定に合わせ、用意します。

*** business bank
作業報告書には、ストーリー番号を記述

*** rails開発
**** N+1
DBに複数回アクセスに行くらしい
includes付与で、事前に全て読み込む。

http://qiita.com/k0kubun/items/80c5a5494f53bb88dc58

で、どういう時にでるんだ?

*** code規約
毎日、少しは覚えるように確認
https://git.ruby-dev.jp/home/code-guide

class method
module_function
この辺りが、理解していないな

*** git 運用ルール
https://torchpad.com/workspace/wikis/ruby-dev/pages/Git%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC/%E9%81%8B%E7%94%A8%E3%83%AB%E3%83%BC%E3%83%AB

*** wiki 更新
server - https://torchpad.com/workspace/wikis/ruby-dev/pages/AWS/Server+Info
wepage - https://torchpad.com/workspace/wikis/project-mng/pages/webpage/%E7%8A%B6%E6%B3%81

*** server増加時
- ssl設定

*** 本社開発室の体制のたたき台
**** 毎日、朝会を実施
 http://japan.blogs.atlassian.com/2015/04/standup-atlassian/

**** 開発
- ストーリーをスタートする。
- コーティング
- RSPECを記載
- PR
- ストーリーをデリバーして、ストーリーにRPのURLを記載。
  作業時間の記録。

**** PR後、CIでテスト
- PR後、CIでテストを実施。
- テストが成功/失敗したら、PRへコメント。

**** コードの品質確認
- codeclimate

- rubocop
   https://github.com/bbatsov/rubocop

**** レビュー
***** 基本、全員レビュー
- 一人は、マージする前に動かす
    - 一通りのブラウザーで動作確認

***** マージ：PMが実施。
***** マスターへのマージ後、CIテストを実施。
- NGの場合、Slackに通知。

***** テスト
- Staging環境に上げて、仕様書見て、一通りテスト。
- 若手？にしてもらう。

***** リリース前に、画面を分担して、動作確認
***** 情報共有
- https://teams.qiita.com/features
- https://www.atlassian.com/ja/software/confluence

***** 課題
- 見積もり工数、実工数の管理がPivotal Trackerだとできない。

- 途中経過と、結果の予想
- 対応策
- 分かっていない事の報告

*** backup
- AMI, 色々

- version up時
  AMI, source

- server止めるとき注意

*** 文章推敲
注意。推敲しろ

*** メンテナンス時間
- 連携方法はその都度確認。

- 工事開始通知

- メインテナンス画面へ変更
- update
- 裏側で動作確認
    - 場合によっては差し戻し
- メインテナンス画面から通常体制へ

- 工事終了通知

*** 日々気にする
**** 監視のポイントを抑える
- まずはポイント探しから

**** server容量は足りているか
app log
web server log
mysql log

data入力

**** 稼働しているか

** Todo [#G] Roster                                                :daily:
SCHEDULED: <2016-10-20 Thu +1d>
- State "Done"       from "Todo"       [2016-10-20 Thu 07:34]
- State "Done"       from "Todo"       [2016-10-17 Mon 18:16]
- State "Done"       from "Todo"       [2016-10-12 Wed 19:51]
- State "Done"       from "Todo"       [2016-10-07 Fri 18:08]
- State "Done"       from "Todo"       [2016-10-06 Thu 01:00]
- State "Done"       from "Todo"       [2016-10-04 Tue 18:27]
- State "Done"       from "Todo"       [2016-09-29 Thu 09:23]
- State "Done"       from "Todo"       [2016-09-29 Thu 09:20]
- State "Done"       from "Todo"       [2016-09-21 Wed 19:28]
- State "Done"       from "Todo"       [2016-09-13 Tue 19:26]
- State "Done"       from "Todo"       [2016-09-12 Mon 19:50]
- State "Done"       from "Todo"       [2016-09-09 Fri 20:57]
- State "Done"       from "Todo"       [2016-09-08 Thu 09:59]
- State "Done"       from "Todo"       [2016-09-06 Tue 19:16]
- State "Done"       from "Todo"       [2016-09-05 Mon 20:12]
:PROPERTIES:
:LOGGING: DONE(!) logrepeat
:STYLE: habit
:LAST_REPEAT: [2016-10-20 Thu 07:34]
:END:

** Todo [#G] crusible / atlassian                                  :daily:
SCHEDULED: <2016-10-18 Tue +1d>
- State "Done"       from "Todo"       [2016-10-17 Mon 18:16]
CLOCK: [2016-10-17 Mon 07:35]--[2016-10-17 Mon 07:42] =>  0:07
- State "Done"       from "Todo"       [2016-10-12 Wed 19:51]
- State "Done"       from "Todo"       [2016-10-07 Fri 18:09]
- State "Done"       from "Todo"       [2016-10-07 Fri 08:22]
- State "Done"       from "Todo"       [2016-10-07 Fri 08:15]
- State "Done"       from "Todo"       [2016-10-04 Tue 18:27]
- State "Done"       from "Todo"       [2016-09-29 Thu 09:20]
- State "Done"       from "Todo"       [2016-09-21 Wed 19:28]
:PROPERTIES:
:LOGGING: DONE(!) logrepeat
:STYLE: habit
:LAST_REPEAT: [2016-10-17 Mon 18:16]
:END:

- ticket
- review状態確認

** Todo [#G] Roster                                              :monthly:
SCHEDULED: <2016-10-28 Fri +30d>
- State "Done"       from "Todo"       [2016-10-04 Tue 08:54]
- State "Done"       from "Waiting"    [2016-09-01 Thu 12:39]
- State "Done"       from "Waiting"    [2016-08-03 Wed 11:19]
- State "Done"       from "Waiting"    [2016-07-01 Fri 09:56]
- State "Done"       from "Waiting"    [2016-06-30 Thu 08:36]
CLOCK: [2016-06-30 Thu 08:30]--[2016-06-30 Thu 08:36] =>  0:06
- State "Done"       from "Waiting"    [2016-06-01 Wed 12:18]
- State "Done"       from "Todo"       [2016-04-07 Thu 09:52]
- State "Done"       from "Todo"       [2016-04-05 Tue 09:42]
- State "Done"       from "Todo"       [2016-03-30 Wed 10:49]
:PROPERTIES:
:LOGGING: DONE(!) logrepeat
:STYLE: habit
:LAST_REPEAT: [2016-10-04 Tue 08:54]
:END:

- 月1勤務表

メール送信先って、管理本部あてだっけ

*** 通常
- [ ] 勤務表
- [ ] 大吉さんへのメール

*** 代休
全項目へ、日付照合を残す

- [ ] 朝会doc. 当月分は残す。柴田さんが処理したものは削除
- [ ] 申請書
- [ ] 勤怠表へ
- [ ] 大吉さんへメール

** Todo [#G] security update確認
SCHEDULED: <2016-11-08 Tue +3w>
- State "Done"       from "Todo"       [2016-10-18 Tue 08:17]
- State "Done"       from "Todo"       [2016-09-27 Tue 10:51]
- State "Done"       from "Todo"       [2016-09-06 Tue 09:16]
- State "Done"       from "Todo"       [2016-08-16 Tue 12:22]
- State "Done"       from "Todo"       [2016-07-26 Tue 09:10]
- State "Done"       from "Todo"       [2016-07-05 Tue 09:17]
- State "Done"       from "Todo"       [2016-06-14 Tue 16:26]
- State "Done"       from "Todo"       [2016-05-24 Tue 09:19]
- State "Done"       from "Todo"       [2016-05-09 Mon 10:50]
- State "Done"       from "Todo"       [2016-03-25 Fri 09:29]
CLOCK: [2016-03-25 Fri 09:25]--[2016-03-25 Fri 09:29] =>  0:04
- State "Done"       from "Todo"       [2016-03-24 Thu 09:52]
- State "Done"       from "Todo"       [2016-03-08 Tue 09:49]
CLOCK: [2016-03-08 Tue 09:47]--[2016-03-08 Tue 09:48] =>  0:01
- State "Done"       from "Todo"       [2016-02-10 Wed 10:28]
- State "Done"       from "Todo"       [2016-02-08 Mon 10:28]
- State "Done"       from "Todo"       [2015-10-01 Thu 13:37]
:PROPERTIES:
:LOGGING: DONE(!) logrepeat
:STYLE: habit
:LAST_REPEAT: [2016-10-18 Tue 08:17]
:END:

- update rss確認
- いい情報源があれば随時追加

- slackに追加

http://www.web116.jp/ced/support/version/index.html


*** ruby-webpage
- ruby
- rails
- gem
- linxu package

**** opswork
ospworks Layerからの、rubygem version指定
// 勉強不足。不一致の場合どうなるか確認していない
// 2.2.3を指定したが、deploy時にエラーとなった
// opsworksの対応状況次第か?
// どうやら、初期作成時に指定されている模様
// 更新されたらversion upも可能か

*** uniqlo
- ruby
- rails
- gem
- linux package

** Todo [#G] Router update確認
SCHEDULED: <2016-11-04 Fri +3w>
- State "Done"       from "Todo"       [2016-10-17 Mon 07:36]
- State "Done"       from "Todo"       [2016-09-26 Mon 19:56]
- State "Done"       from "Todo"       [2016-09-02 Fri 11:21]
CLOCK: [2016-09-02 Fri 11:21]--[2016-09-02 Fri 11:21] =>  0:00
- State "Done"       from "Todo"       [2016-08-15 Mon 09:46]
- State "Done"       from "Todo"       [2016-07-22 Fri 09:23]
CLOCK: [2016-07-22 Fri 09:22]--[2016-07-22 Fri 09:23] =>  0:01
- State "Done"       from "Todo"       [2016-07-01 Fri 09:17]
- State "Done"       from "Todo"       [2016-06-10 Fri 10:12]
- State "Done"       from "Todo"       [2016-05-20 Fri 09:39]
- State "Done"       from "Todo"       [2016-05-09 Mon 10:48]
:PROPERTIES:
:LOGGING: DONE(!) logrepeat
:STYLE: habit
:LAST_REPEAT: [2016-10-17 Mon 07:36]
:END:

https://web116.jp/ced/support/version/index.html
RS-500KI

- [X] 09/26更新


** Todo [#G] security check 台帳 印刷
SCHEDULED: <2016-10-29 Sat +1m>
- State "Done"       from "Todo"       [2016-09-29 Thu 14:23]
- State "Done"       from "Todo"       [2016-08-29 Mon 16:59]
- State "Done"       from "Todo"       [2016-07-26 Tue 10:11]
- State "Done"       from "Todo"       [2016-06-28 Tue 10:02]
CLOCK: [2016-06-28 Tue 09:50]--[2016-06-28 Tue 10:02] =>  0:12
- State "Done"       from "Todo"       [2016-05-26 Thu 09:57]
- State "Done"       from "Todo"       [2016-04-26 Tue 09:41]
CLOCK: [2016-04-26 Tue 09:33]--[2016-04-26 Tue 09:41] =>  0:08
- State "Done"       from "Todo"       [2016-03-29 Tue 14:49]
:PROPERTIES:
:LOGGING: DONE(!) logrepeat
:STYLE: habit
:LAST_REPEAT: [2016-09-29 Thu 14:23]
:END:


** Todo [#G] 各serverのsecurityを考える
SCHEDULED: <2016-08-26 Fri +1m>
- State "Paused"     from "Todo"       [2016-10-18 Tue 08:19]
- State "Paused"     from "Todo"       [2016-09-13 Tue 19:17]
- State "Done"       from "Todo"       [2016-05-30 Mon 11:13]
:PROPERTIES:
:LAST_REPEAT: [2016-10-18 Tue 08:19]
:END:
:LOGGING:  DONE(!) logrepeat
:STYLE:    habit
:LAST_REPEAT: [2016-04-26 Tue 09:41]

- これについて、30min時間をとろう

- どんな項目を条件にあげるか? 考えよう

- filtering状態
- update
   - linux package
   - gem
   - bower
   - npm

- starが多いもの
- 更新されているもの



** Todo ISMS
SCHEDULED: <2016-10-18 Tue +1w>
- State "Done"       from "Todo"       [2016-10-12 Wed 19:51]
- State "Done"       from "Todo"       [2016-10-04 Tue 18:27]
- State "Done"       from "Todo"       [2016-09-27 Tue 10:51]
- State "Done"       from "Todo"       [2016-09-16 Fri 10:03]
- State "Done"       from "Todo"       [2016-09-09 Fri 09:44]
- State "Done"       from "Todo"       [2016-09-05 Mon 10:58]
- State "Done"       from "Todo"       [2016-08-25 Thu 10:03]
- State "Done"       from "Todo"       [2016-08-19 Fri 18:39]
- State "Done"       from "Todo"       [2016-08-16 Tue 12:40]
- State "Done"       from "Todo"       [2016-08-09 Tue 20:27]
- State "Done"       from "Todo"       [2016-07-28 Thu 11:36]
- State "Done"       from "Todo"       [2016-07-21 Thu 10:00]
- State "Done"       from "Todo"       [2016-07-20 Wed 10:56]
- State "Done"       from "Todo"       [2016-07-07 Thu 09:47]
- State "Done"       from "Todo"       [2016-06-30 Thu 08:36]
- State "Done"       from "Todo"       [2016-06-24 Fri 10:24]
- State "Done"       from "Todo"       [2016-06-17 Fri 12:31]
- State "Done"       from "Todo"       [2016-06-10 Fri 10:11]
- State "Done"       from "Todo"       [2016-06-02 Thu 09:08]
:PROPERTIES:
:LOGGING: DONE(!) logrepeat
:STYLE: habit
:LAST_REPEAT: [2016-10-12 Wed 19:51]
:END:

*** rule
**** Q : 自社の情報セキュリティ基本方針は把握してるか？
社内と、自社HPに掲示してある。

**** Q.重要な書類は、離席時どうしているか？
所定の場所（鍵付き）に保管している

**** Q.離席時、スクリーンセーバーは設定されているか？
15分以内に作動し、パスワードを要求する設定にしている

**** Q.パスワードは定期的に変更しているか？
90日ごとに変更している

**** Q.パスワードは充分に複雑か？
英数字8桁以上（2種類×8桁以上）のルールで設定している

**** Q.PCは帰宅時どうしているか？
電源を落としてから帰宅している（執務エリアは施錠管理されているため安全）

**** Q.アンチウィルスソフトは導入しているか？
している。アップデートは自動で行われる設定にしている

**** Q.自宅作業（テレワーキング）は可能か？
障害対応時以外は、今のところ自宅作業は禁止されています

**** Q.その他、社員が守るべきルールを把握しているか？
Googleドライブにて以下の通り共有しています。
・情報資産取扱い共通ルール   https://drive.google.com/open?id=0B32RFNW_xx8eYjh1WTFlQ3BzUT
・情報セキュリティ共通ルール  https://drive.google.com/open?id=0B32RFNW_xx8eNWVOa19PQ2tEbVU

*** base
- 書類ないの、ISMS参照。
- とりあえず、ppt再確認。

*** 見直し
- localには不要なファイルを残さない。
- 保存する際は、場所を限定する。
