  # ----------------------------------------------------------------
  # defun security group
  # ----------------------------------------------------------------
  &sg_gateway SgGateway:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: gateway
      VpcId:
        Ref: *vpc_name
      Tags:
      - Key: Name
        Value: gateway


  &sg_nat SgNat:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: nat
      VpcId:
        Ref: *vpc_name
      Tags:
      - Key: Name
        Value: nat


  &sg_elb SgElb:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: elb
      VpcId:
        Ref: *vpc_name
      Tags:
      - Key: Name
        Value: elb


  &sg_web SgWeb:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: web
      VpcId:
        Ref: *vpc_name
      Tags:
      - Key: Name
        Value: web


  &sg_cms SgmCms:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: cms
      VpcId:
        Ref: *vpc_name
      Tags:
      - Key: Name
        Value: cms


  &sg_backend SgBackend:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: backend
      VpcId:
        Ref: *vpc_name
      Tags:
      - Key: Name
        Value: backend



  # ----------------------------------------------------------------
  # add in rule to sg
  # ----------------------------------------------------------------
  IngresssSgGateway:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: *sg_gateway
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: 0.0.0.0/0
      

  ingressSgElb0:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: *sg_elb
      IpProtocol: tcp
      FromPort: '80'
      ToPort: '80'
      CidrIp: 0.0.0.0/0
  ingressSgElb1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: *sg_elb
      IpProtocol: tcp
      FromPort: '443'
      ToPort: '443'
      CidrIp: 0.0.0.0/0


  IngressSgNat:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: *sg_nat
      IpProtocol: tcp
      FromPort: '0'
      ToPort: '65535'
      CidrIp: 10.0.0.0/16


  IngressSgWeb1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: *sg_web
      IpProtocol: tcp
      FromPort: '80'
      ToPort: '80'
      CidrIp: 0.0.0.0/0
  IngressSgWeb2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: *sg_web
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      SourceSecurityGroupId:
        Ref: *sg_gateway
      SourceSecurityGroupOwnerId:
        Ref: *sg_gateway
  IngressSgWeb3:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: *sg_web
      IpProtocol: tcp
      FromPort: '443'
      ToPort: '443'
      CidrIp: 0.0.0.0/0


  IngressSgCms1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: *sg_cms
      IpProtocol: tcp
      FromPort: '80'
      ToPort: '80'
      CidrIp: 0.0.0.0/0
  IngressSgCms2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: *sg_cms
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      SourceSecurityGroupId:
        Ref: *sg_gateway
      SourceSecurityGroupOwnerId:
        Ref: *sg_gateway
  IngressSgCms3:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: *sg_cms
      IpProtocol: tcp
      FromPort: '443'
      ToPort: '443'
      CidrIp: 0.0.0.0/0


  IngressSgBackend1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: *sg_backend
      IpProtocol: tcp
      FromPort: '3306'
      ToPort: '3306'
      SourceSecurityGroupId:
        Ref: *sg_cms
      SourceSecurityGroupOwnerId:
        Ref: *sg_cms
  IngressSgBackend2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: *sg_backend
      IpProtocol: tcp
      FromPort: '3306'
      ToPort: '3306'
      SourceSecurityGroupId:
        Ref: *sg_web
      SourceSecurityGroupOwnerId:
        Ref: *sg_web





  # ----------------------------------------------------------------
  # add out rule to sg
  # ----------------------------------------------------------------
  egress_sg_gateway:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Ref: *sg_gateway
      IpProtocol: "-1"
      CidrIp: 0.0.0.0/0


  egress_sg_elb:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Ref: *sg_elb
      IpProtocol: "-1"
      CidrIp: 0.0.0.0/0


  egress_sg_nat:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Ref: *sg_nat
      IpProtocol: "-1"
      CidrIp: 0.0.0.0/0


  egress_sg_web:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Ref: *sg_web
      IpProtocol: "-1"
      CidrIp: 0.0.0.0/0


  egress_sg_cms:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Ref: *sg_cms
      IpProtocol: "-1"
      CidrIp: 0.0.0.0/0


  egress_sg_backend:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Ref: *sg_backend
      IpProtocol: "-1"
      CidrIp: 0.0.0.0/0
