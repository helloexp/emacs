Vagrant.configure(2) do |config|
  config.vm.box = 'opscode_ubuntu-14.04_chef-provisionerless'
  config.vm.box_url = 'http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-14.04_chef-provisionerless.box'

  config.vm.network 'private_network', ip: '192.168.33.30'
  config.vm.network :forwarded_port, guest: 3000, host: 4000

  config.vm.provider 'virtualbox' do |vb|
    host = RbConfig::CONFIG['host_os']

    # Give VM 1/4 system memory & access to all cpu cores on the host
    if host =~ /darwin/
      cpus = `sysctl -n hw.ncpu`.to_i
      # sysctl returns Bytes and we need to convert to MB
      mem = `sysctl -n hw.memsize`.to_i / 1024 / 1024 / 4
    elsif host =~ /linux/
      cpus = `nproc`.to_i
      # meminfo shows KB and we need to convert to MB
      mem_command = "grep 'MemTotal' /proc/meminfo |"\
                    "sed -e 's/MemTotal://' -e 's/ kB//'"
      mem = `#{mem_command}`.to_i / 1024 / 4
    else # sorry Windows folks, I can't help you
      cpus = 1
      mem = 1024
    end

    # Read cups and mem from the environment variables if it were set
    cpus = ENV['VM_CPUS'] || cpus
    mem = ENV['VM_MEM'] || mem

    vb.customize ['modifyvm', :id, '--memory', mem]
    vb.customize ['modifyvm', :id, '--cpus', cpus]
  end

  config.vm.synced_folder '.', '/vagrant', type: 'nfs'

  config.vm.provision 'chef_zero' do |chef|
    chef.version = '12.4.1'
    chef.cookbooks_path = './chef/cookbooks'
    chef.add_recipe 'apt'
    chef.add_recipe 'ruby_build'
    chef.add_recipe 'rbenv::system'
    chef.add_recipe 'postgresql::server'
    chef.add_recipe 'postgresql::server_dev'
    chef.add_recipe 'rails_support'
    chef.json = {
      'rbenv' => {
        'global' => '2.3.0',
        'rubies' => ['2.3.0'],
        'gems' => {
          '2.3.0' => [
            { 'name' => 'bundler' }
          ]
        }
      },
      'postgresql' => {
        'pg_hba' => [
          { 'type' => 'local', 'db' => 'all', 'user' => 'postgres',
            'addr' => '', 'method' => 'trust' }
        ],
        'databases' => [
          {
            'name' => 'development',
            'owner' => 'postgres',
            'encoding' => 'UTF-8'
          },
          {
            'name' => 'test',
            'owner' => 'postgres',
            'encoding' => 'UTF-8'
          },
          {
            'name' => 'production',
            'owner' => 'postgres',
            'encoding' => 'UTF-8'
          }
        ]
      }
    }
  end
end
